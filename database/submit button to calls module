CREATE TABLE accounts
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(150),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    account_type VARCHAR(100),
    industry VARCHAR(50),
    annual_revenue VARCHAR(100),
    phone_fax VARCHAR(100),
    billing_address_street VARCHAR(150),
    billing_address_city VARCHAR(100),
    billing_address_state VARCHAR(100),
    billing_address_postalcode VARCHAR(20),
    billing_address_country VARCHAR(255),
    rating VARCHAR(100),
    phone_office VARCHAR(100),
    phone_alternate VARCHAR(100),
    website VARCHAR(255),
    ownership VARCHAR(100),
    employees VARCHAR(10),
    ticker_symbol VARCHAR(10),
    shipping_address_street VARCHAR(150),
    shipping_address_city VARCHAR(100),
    shipping_address_state VARCHAR(100),
    shipping_address_postalcode VARCHAR(20),
    shipping_address_country VARCHAR(255),
    parent_id CHAR(36),
    sic_code VARCHAR(10),
    campaign_id CHAR(36)
);
CREATE TABLE accounts_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE accounts_bugs
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    account_id VARCHAR(36),
    bug_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE accounts_cases
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    account_id VARCHAR(36),
    case_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE accounts_contacts
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    contact_id VARCHAR(36),
    account_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE accounts_cstm
(
    id_c CHAR(36) PRIMARY KEY NOT NULL,
    jjwg_maps_lng_c REAL DEFAULT 0.00000000,
    jjwg_maps_lat_c REAL DEFAULT 0.00000000,
    jjwg_maps_geocode_status_c VARCHAR(255),
    jjwg_maps_address_c VARCHAR(255),
    brick_c VARCHAR(255),
    country_c VARCHAR(100),
    city_c VARCHAR(255)
);
CREATE TABLE accounts_opportunities
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    opportunity_id VARCHAR(36),
    account_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE acl_actions
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    name VARCHAR(150),
    category VARCHAR(100),
    acltype VARCHAR(100),
    aclaccess INT,
    deleted TINYINT
);
CREATE TABLE acl_roles
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    name VARCHAR(150),
    description LONGTEXT,
    deleted TINYINT
);
CREATE TABLE acl_roles_actions
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    role_id VARCHAR(36),
    action_id VARCHAR(36),
    access_override INT,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE acl_roles_users
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    role_id VARCHAR(36),
    user_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE address_book
(
    assigned_user_id CHAR(36) NOT NULL,
    bean VARCHAR(50),
    bean_id CHAR(36) NOT NULL
);
CREATE TABLE alerts
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    is_read TINYINT,
    target_module VARCHAR(255),
    type VARCHAR(255),
    url_redirect VARCHAR(255)
);
CREATE TABLE am_projecttemplates
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    status VARCHAR(100) DEFAULT 'Draft',
    priority VARCHAR(100) DEFAULT 'High',
    override_business_hours TINYINT DEFAULT 0
);
CREATE TABLE am_projecttemplates_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE am_projecttemplates_contacts_1_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    am_projecttemplates_ida VARCHAR(36),
    contacts_idb VARCHAR(36)
);
CREATE TABLE am_projecttemplates_project_1_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    am_projecttemplates_project_1am_projecttemplates_ida VARCHAR(36),
    am_projecttemplates_project_1project_idb VARCHAR(36)
);
CREATE TABLE am_projecttemplates_users_1_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    am_projecttemplates_ida VARCHAR(36),
    users_idb VARCHAR(36)
);
CREATE TABLE am_tasktemplates
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    status VARCHAR(100) DEFAULT 'Not Started',
    priority VARCHAR(100) DEFAULT 'High',
    percent_complete INT DEFAULT 0,
    predecessors INT,
    milestone_flag TINYINT DEFAULT 0,
    relationship_type VARCHAR(100) DEFAULT 'FS',
    task_number INT,
    order_number INT,
    estimated_effort INT,
    utilization VARCHAR(100) DEFAULT '0',
    duration INT
);
CREATE TABLE am_tasktemplates_am_projecttemplates_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    am_tasktemplates_am_projecttemplatesam_projecttemplates_ida VARCHAR(36),
    am_tasktemplates_am_projecttemplatesam_tasktemplates_idb VARCHAR(36)
);
CREATE TABLE am_tasktemplates_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aobh_businesshours
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    opening_hours VARCHAR(100) DEFAULT '1',
    closing_hours VARCHAR(100) DEFAULT '1',
    open TINYINT,
    day VARCHAR(100) DEFAULT 'monday'
);
CREATE TABLE aod_index
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    last_optimised DATETIME,
    location VARCHAR(255)
);
CREATE TABLE aod_index_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aod_indexevent
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    error VARCHAR(255),
    success TINYINT DEFAULT 0,
    record_id CHAR(36),
    record_module VARCHAR(255)
);
CREATE TABLE aod_indexevent_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aok_knowledge_base_categories
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36)
);
CREATE TABLE aok_knowledge_base_categories_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aok_knowledgebase
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    status VARCHAR(100) DEFAULT 'Draft',
    revision VARCHAR(255),
    additional_info LONGTEXT,
    user_id_c CHAR(36),
    user_id1_c CHAR(36)
);
CREATE TABLE aok_knowledgebase_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aok_knowledgebase_categories
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    aok_knowledgebase_id VARCHAR(36),
    aok_knowledge_base_categories_id VARCHAR(36)
);
CREATE TABLE aop_case_events
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    case_id CHAR(36)
);
CREATE TABLE aop_case_events_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aop_case_updates
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    case_id CHAR(36),
    contact_id CHAR(36),
    internal TINYINT
);
CREATE TABLE aop_case_updates_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aor_charts
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    aor_report_id CHAR(36),
    type VARCHAR(100),
    x_field INT,
    y_field INT
);
CREATE TABLE aor_conditions
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    aor_report_id CHAR(36),
    condition_order INT,
    logic_op VARCHAR(255),
    parenthesis VARCHAR(255),
    module_path LONGTEXT,
    field VARCHAR(100),
    operator VARCHAR(100),
    value_type VARCHAR(100),
    value VARCHAR(255),
    parameter TINYINT
);
CREATE TABLE aor_fields
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    aor_report_id CHAR(36),
    field_order INT,
    module_path LONGTEXT,
    field VARCHAR(100),
    display TINYINT,
    link TINYINT,
    label VARCHAR(255),
    field_function VARCHAR(100),
    sort_by VARCHAR(100),
    format VARCHAR(100),
    total VARCHAR(100),
    sort_order VARCHAR(100),
    group_by TINYINT,
    group_order VARCHAR(100),
    group_display INT
);
CREATE TABLE aor_reports
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    report_module VARCHAR(100),
    graphs_per_row INT DEFAULT 2
);
CREATE TABLE aor_reports_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aor_scheduled_reports
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    schedule VARCHAR(100),
    last_run DATETIME,
    status VARCHAR(100),
    email_recipients LONGTEXT,
    aor_report_id CHAR(36)
);
CREATE TABLE aos_contracts
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    reference_code VARCHAR(255),
    start_date DATE,
    end_date DATE,
    total_contract_value DECIMAL(26,6),
    total_contract_value_usdollar DECIMAL(26,6),
    currency_id CHAR(36),
    status VARCHAR(100) DEFAULT 'Not Started',
    customer_signed_date DATE,
    company_signed_date DATE,
    renewal_reminder_date DATETIME,
    contract_type VARCHAR(100) DEFAULT 'Type',
    contract_account_id CHAR(36),
    opportunity_id CHAR(36),
    contact_id CHAR(36),
    call_id CHAR(36),
    total_amt DECIMAL(26,6),
    total_amt_usdollar DECIMAL(26,6),
    subtotal_amount DECIMAL(26,6),
    subtotal_amount_usdollar DECIMAL(26,6),
    discount_amount DECIMAL(26,6),
    discount_amount_usdollar DECIMAL(26,6),
    tax_amount DECIMAL(26,6),
    tax_amount_usdollar DECIMAL(26,6),
    shipping_amount DECIMAL(26,6),
    shipping_amount_usdollar DECIMAL(26,6),
    shipping_tax VARCHAR(100),
    shipping_tax_amt DECIMAL(26,6),
    shipping_tax_amt_usdollar DECIMAL(26,6),
    total_amount DECIMAL(26,6),
    total_amount_usdollar DECIMAL(26,6)
);
CREATE TABLE aos_contracts_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aos_contracts_cstm
(
    id_c CHAR(36) PRIMARY KEY NOT NULL
);
CREATE TABLE aos_contracts_documents
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    aos_contracts_id VARCHAR(36),
    documents_id VARCHAR(36),
    document_revision_id VARCHAR(36)
);
CREATE TABLE aos_invoices
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    billing_account_id CHAR(36),
    billing_contact_id CHAR(36),
    billing_address_street VARCHAR(150),
    billing_address_city VARCHAR(100),
    billing_address_state VARCHAR(100),
    billing_address_postalcode VARCHAR(20),
    billing_address_country VARCHAR(255),
    shipping_address_street VARCHAR(150),
    shipping_address_city VARCHAR(100),
    shipping_address_state VARCHAR(100),
    shipping_address_postalcode VARCHAR(20),
    shipping_address_country VARCHAR(255),
    number INT NOT NULL,
    total_amt DECIMAL(26,6),
    total_amt_usdollar DECIMAL(26,6),
    subtotal_amount DECIMAL(26,6),
    subtotal_amount_usdollar DECIMAL(26,6),
    discount_amount DECIMAL(26,6),
    discount_amount_usdollar DECIMAL(26,6),
    tax_amount DECIMAL(26,6),
    tax_amount_usdollar DECIMAL(26,6),
    shipping_amount DECIMAL(26,6),
    shipping_amount_usdollar DECIMAL(26,6),
    shipping_tax VARCHAR(100),
    shipping_tax_amt DECIMAL(26,6),
    shipping_tax_amt_usdollar DECIMAL(26,6),
    total_amount DECIMAL(26,6),
    total_amount_usdollar DECIMAL(26,6),
    currency_id CHAR(36),
    quote_number INT,
    quote_date DATE,
    invoice_date DATE,
    due_date DATE,
    status VARCHAR(100),
    template_ddown_c LONGTEXT,
    subtotal_tax_amount DECIMAL(26,6),
    subtotal_tax_amount_usdollar DECIMAL(26,6)
);
CREATE TABLE aos_invoices_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aos_line_item_groups
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    total_amt DECIMAL(26,6),
    total_amt_usdollar DECIMAL(26,6),
    discount_amount DECIMAL(26,6),
    discount_amount_usdollar DECIMAL(26,6),
    subtotal_amount DECIMAL(26,6),
    subtotal_amount_usdollar DECIMAL(26,6),
    tax_amount DECIMAL(26,6),
    tax_amount_usdollar DECIMAL(26,6),
    subtotal_tax_amount DECIMAL(26,6),
    subtotal_tax_amount_usdollar DECIMAL(26,6),
    total_amount DECIMAL(26,6),
    total_amount_usdollar DECIMAL(26,6),
    parent_type VARCHAR(100),
    parent_id CHAR(36),
    number INT,
    currency_id CHAR(36)
);
CREATE TABLE aos_line_item_groups_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aos_pdf_templates
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    active TINYINT DEFAULT 1,
    type VARCHAR(100),
    pdfheader LONGTEXT,
    pdffooter LONGTEXT,
    margin_left INT DEFAULT 15,
    margin_right INT DEFAULT 15,
    margin_top INT DEFAULT 16,
    margin_bottom INT DEFAULT 16,
    margin_header INT DEFAULT 9,
    margin_footer INT DEFAULT 9
);
CREATE TABLE aos_pdf_templates_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aos_product_categories
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    is_parent TINYINT DEFAULT 0,
    parent_category_id CHAR(36)
);
CREATE TABLE aos_product_categories_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aos_products
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    maincode VARCHAR(100) DEFAULT 'XXXX',
    part_number VARCHAR(25),
    category VARCHAR(100),
    type VARCHAR(100) DEFAULT 'Good',
    cost DECIMAL(26,6),
    cost_usdollar DECIMAL(26,6),
    currency_id CHAR(36),
    price DECIMAL(26,6),
    price_usdollar DECIMAL(26,6),
    url VARCHAR(255),
    contact_id CHAR(36),
    product_image VARCHAR(255),
    aos_product_category_id CHAR(36)
);
CREATE TABLE aos_products_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aos_products_quotes
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name LONGTEXT,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    currency_id CHAR(36),
    part_number VARCHAR(255),
    item_description LONGTEXT,
    number INT,
    product_qty DECIMAL(18,4),
    product_cost_price DECIMAL(26,6),
    product_cost_price_usdollar DECIMAL(26,6),
    product_list_price DECIMAL(26,6),
    product_list_price_usdollar DECIMAL(26,6),
    product_discount DECIMAL(26,6),
    product_discount_usdollar DECIMAL(26,6),
    product_discount_amount DECIMAL(26,6),
    product_discount_amount_usdollar DECIMAL(26,6),
    discount VARCHAR(255) DEFAULT 'Percentage',
    product_unit_price DECIMAL(26,6),
    product_unit_price_usdollar DECIMAL(26,6),
    vat_amt DECIMAL(26,6),
    vat_amt_usdollar DECIMAL(26,6),
    product_total_price DECIMAL(26,6),
    product_total_price_usdollar DECIMAL(26,6),
    vat VARCHAR(100) DEFAULT '5.0',
    parent_type VARCHAR(100),
    parent_id CHAR(36),
    product_id CHAR(36),
    group_id CHAR(36)
);
CREATE TABLE aos_products_quotes_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aos_quotes
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    approval_issue LONGTEXT,
    billing_account_id CHAR(36),
    billing_contact_id CHAR(36),
    billing_address_street VARCHAR(150),
    billing_address_city VARCHAR(100),
    billing_address_state VARCHAR(100),
    billing_address_postalcode VARCHAR(20),
    billing_address_country VARCHAR(255),
    shipping_address_street VARCHAR(150),
    shipping_address_city VARCHAR(100),
    shipping_address_state VARCHAR(100),
    shipping_address_postalcode VARCHAR(20),
    shipping_address_country VARCHAR(255),
    expiration DATE,
    number INT NOT NULL,
    opportunity_id CHAR(36),
    template_ddown_c LONGTEXT,
    total_amt DECIMAL(26,6),
    total_amt_usdollar DECIMAL(26,6),
    subtotal_amount DECIMAL(26,6),
    subtotal_amount_usdollar DECIMAL(26,6),
    discount_amount DECIMAL(26,6),
    discount_amount_usdollar DECIMAL(26,6),
    tax_amount DECIMAL(26,6),
    tax_amount_usdollar DECIMAL(26,6),
    shipping_amount DECIMAL(26,6),
    shipping_amount_usdollar DECIMAL(26,6),
    shipping_tax VARCHAR(100),
    shipping_tax_amt DECIMAL(26,6),
    shipping_tax_amt_usdollar DECIMAL(26,6),
    total_amount DECIMAL(26,6),
    total_amount_usdollar DECIMAL(26,6),
    currency_id CHAR(36),
    stage VARCHAR(100) DEFAULT 'Draft',
    term VARCHAR(100),
    terms_c LONGTEXT,
    approval_status VARCHAR(100),
    invoice_status VARCHAR(100) DEFAULT 'Not Invoiced',
    subtotal_tax_amount DECIMAL(26,6),
    subtotal_tax_amount_usdollar DECIMAL(26,6)
);
CREATE TABLE aos_quotes_aos_invoices_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    aos_quotes77d9_quotes_ida VARCHAR(36),
    aos_quotes6b83nvoices_idb VARCHAR(36)
);
CREATE TABLE aos_quotes_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE aos_quotes_os_contracts_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    aos_quotese81e_quotes_ida VARCHAR(36),
    aos_quotes4dc0ntracts_idb VARCHAR(36)
);
CREATE TABLE aos_quotes_project_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    aos_quotes1112_quotes_ida VARCHAR(36),
    aos_quotes7207project_idb VARCHAR(36)
);
CREATE TABLE aow_actions
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    aow_workflow_id CHAR(36),
    action_order INT,
    action VARCHAR(100),
    parameters LONGTEXT
);
CREATE TABLE aow_conditions
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    aow_workflow_id CHAR(36),
    condition_order INT,
    module_path LONGTEXT,
    field VARCHAR(100),
    operator VARCHAR(100),
    value_type VARCHAR(255),
    value VARCHAR(255)
);
CREATE TABLE aow_processed
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    aow_workflow_id CHAR(36),
    parent_id CHAR(36),
    parent_type VARCHAR(100),
    status VARCHAR(100) DEFAULT 'Pending'
);
CREATE TABLE aow_processed_aow_actions
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    aow_processed_id VARCHAR(36),
    aow_action_id VARCHAR(36),
    status VARCHAR(36) DEFAULT 'Pending',
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE aow_workflow
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    flow_module VARCHAR(100),
    flow_run_on VARCHAR(100) DEFAULT '0',
    status VARCHAR(100) DEFAULT 'Active',
    run_when VARCHAR(100) DEFAULT 'Always',
    multiple_runs TINYINT DEFAULT 0
);
CREATE TABLE aow_workflow_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE bugs
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    bug_number INT NOT NULL AUTO_INCREMENT,
    type VARCHAR(255),
    status VARCHAR(100),
    priority VARCHAR(100),
    resolution VARCHAR(255),
    work_log LONGTEXT,
    found_in_release VARCHAR(255),
    fixed_in_release VARCHAR(255),
    source VARCHAR(255),
    product_category VARCHAR(255)
);
CREATE TABLE bugs_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE calls
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(50),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    duration_hours INT,
    duration_minutes INT,
    date_start DATETIME,
    date_end DATETIME,
    parent_type VARCHAR(255),
    status VARCHAR(100) DEFAULT 'Planned',
    direction VARCHAR(100),
    parent_id CHAR(36),
    reminder_time INT DEFAULT -1,
    email_reminder_time INT DEFAULT -1,
    email_reminder_sent TINYINT DEFAULT 0,
    outlook_id VARCHAR(255),
    repeat_type VARCHAR(36),
    repeat_interval INT DEFAULT 1,
    repeat_dow VARCHAR(7),
    repeat_until DATE,
    repeat_count INT,
    repeat_parent_id CHAR(36),
    recurring_source VARCHAR(36)
);
CREATE TABLE calls_contacts
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    call_id VARCHAR(36),
    contact_id VARCHAR(36),
    required VARCHAR(1) DEFAULT '1',
    accept_status VARCHAR(25) DEFAULT 'none',
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE calls_cstm
(
    id_c CHAR(36) PRIMARY KEY NOT NULL,
    call_location_c VARCHAR(100),
    call_location_name_c VARCHAR(255)
);
CREATE TABLE calls_leads
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    call_id VARCHAR(36),
    lead_id VARCHAR(36),
    required VARCHAR(1) DEFAULT '1',
    accept_status VARCHAR(25) DEFAULT 'none',
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE calls_reschedule
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    reason VARCHAR(100),
    call_id CHAR(36)
);
CREATE TABLE calls_reschedule_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE calls_users
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    call_id VARCHAR(36),
    user_id VARCHAR(36),
    required VARCHAR(1) DEFAULT '1',
    accept_status VARCHAR(25) DEFAULT 'none',
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE campaign_log
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    campaign_id CHAR(36),
    target_tracker_key VARCHAR(36),
    target_id VARCHAR(36),
    target_type VARCHAR(100),
    activity_type VARCHAR(100),
    activity_date DATETIME,
    related_id VARCHAR(36),
    related_type VARCHAR(100),
    archived TINYINT DEFAULT 0,
    hits INT DEFAULT 0,
    list_id CHAR(36),
    deleted TINYINT,
    date_modified DATETIME,
    more_information VARCHAR(100),
    marketing_id CHAR(36)
);
CREATE TABLE campaign_trkrs
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    tracker_name VARCHAR(30),
    tracker_url VARCHAR(255) DEFAULT 'http://',
    tracker_key INT NOT NULL AUTO_INCREMENT,
    campaign_id CHAR(36),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    is_optout TINYINT DEFAULT 0,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE campaigns
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(50),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    tracker_key INT NOT NULL AUTO_INCREMENT,
    tracker_count INT DEFAULT 0,
    refer_url VARCHAR(255) DEFAULT 'http://',
    tracker_text VARCHAR(255),
    start_date DATE,
    end_date DATE,
    status VARCHAR(100),
    impressions INT DEFAULT 0,
    currency_id CHAR(36),
    budget DOUBLE,
    expected_cost DOUBLE,
    actual_cost DOUBLE,
    expected_revenue DOUBLE,
    campaign_type VARCHAR(100),
    objective LONGTEXT,
    content LONGTEXT,
    frequency VARCHAR(100)
);
CREATE TABLE campaigns_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE cases
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    case_number INT NOT NULL AUTO_INCREMENT,
    type VARCHAR(255),
    status VARCHAR(100),
    priority VARCHAR(100),
    resolution LONGTEXT,
    work_log LONGTEXT,
    account_id CHAR(36),
    state VARCHAR(100) DEFAULT 'Open',
    contact_created_by_id CHAR(36)
);
CREATE TABLE cases_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE cases_bugs
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    case_id VARCHAR(36),
    bug_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE cases_cstm
(
    id_c CHAR(36) PRIMARY KEY NOT NULL,
    jjwg_maps_lng_c REAL DEFAULT 0.00000000,
    jjwg_maps_lat_c REAL DEFAULT 0.00000000,
    jjwg_maps_geocode_status_c VARCHAR(255),
    jjwg_maps_address_c VARCHAR(255)
);
CREATE TABLE config
(
    category VARCHAR(32),
    name VARCHAR(32),
    value LONGTEXT
);
CREATE TABLE contacts
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    salutation VARCHAR(255),
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    title VARCHAR(100),
    photo VARCHAR(255),
    department VARCHAR(255),
    do_not_call TINYINT DEFAULT 0,
    phone_home VARCHAR(100),
    phone_mobile VARCHAR(100),
    phone_work VARCHAR(100),
    phone_other VARCHAR(100),
    phone_fax VARCHAR(100),
    primary_address_street VARCHAR(150),
    primary_address_city VARCHAR(100),
    primary_address_state VARCHAR(100),
    primary_address_postalcode VARCHAR(20),
    primary_address_country VARCHAR(255),
    alt_address_street VARCHAR(150),
    alt_address_city VARCHAR(100),
    alt_address_state VARCHAR(100),
    alt_address_postalcode VARCHAR(20),
    alt_address_country VARCHAR(255),
    assistant VARCHAR(75),
    assistant_phone VARCHAR(100),
    lead_source VARCHAR(255),
    reports_to_id CHAR(36),
    birthdate DATE,
    campaign_id CHAR(36),
    joomla_account_id VARCHAR(255),
    portal_account_disabled TINYINT,
    portal_user_type VARCHAR(100) DEFAULT 'Single'
);
CREATE TABLE contacts_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE contacts_bugs
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    contact_id VARCHAR(36),
    bug_id VARCHAR(36),
    contact_role VARCHAR(50),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE contacts_cases
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    contact_id VARCHAR(36),
    case_id VARCHAR(36),
    contact_role VARCHAR(50),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE contacts_cstm
(
    id_c CHAR(36) PRIMARY KEY NOT NULL,
    jjwg_maps_lng_c REAL DEFAULT 0.00000000,
    jjwg_maps_lat_c REAL DEFAULT 0.00000000,
    jjwg_maps_geocode_status_c VARCHAR(255),
    jjwg_maps_address_c VARCHAR(255),
    gender_c VARCHAR(100),
    specialty_c VARCHAR(100),
    type_c VARCHAR(100),
    prc_number_c VARCHAR(255)
);
CREATE TABLE contacts_users
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    contact_id VARCHAR(36),
    user_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE cron_remove_documents
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    bean_id VARCHAR(36),
    module VARCHAR(25),
    date_modified DATETIME
);
CREATE TABLE currencies
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(36),
    symbol VARCHAR(36),
    iso4217 VARCHAR(3),
    conversion_rate DOUBLE DEFAULT 0,
    status VARCHAR(100),
    deleted TINYINT,
    date_entered DATETIME,
    date_modified DATETIME,
    created_by CHAR(36) NOT NULL
);
CREATE TABLE custom_fields
(
    bean_id VARCHAR(36),
    set_num INT DEFAULT 0,
    field0 VARCHAR(255),
    field1 VARCHAR(255),
    field2 VARCHAR(255),
    field3 VARCHAR(255),
    field4 VARCHAR(255),
    field5 VARCHAR(255),
    field6 VARCHAR(255),
    field7 VARCHAR(255),
    field8 VARCHAR(255),
    field9 VARCHAR(255),
    deleted TINYINT DEFAULT 0
);
CREATE TABLE document_revisions
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    change_log VARCHAR(255),
    document_id VARCHAR(36),
    doc_id VARCHAR(100),
    doc_type VARCHAR(100),
    doc_url VARCHAR(255),
    date_entered DATETIME,
    created_by CHAR(36),
    filename VARCHAR(255),
    file_ext VARCHAR(100),
    file_mime_type VARCHAR(100),
    revision VARCHAR(100),
    deleted TINYINT DEFAULT 0,
    date_modified DATETIME
);
CREATE TABLE documents
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    document_name VARCHAR(255),
    doc_id VARCHAR(100),
    doc_type VARCHAR(100) DEFAULT 'Sugar',
    doc_url VARCHAR(255),
    active_date DATE,
    exp_date DATE,
    category_id VARCHAR(100),
    subcategory_id VARCHAR(100),
    status_id VARCHAR(100),
    document_revision_id VARCHAR(36),
    related_doc_id CHAR(36),
    related_doc_rev_id CHAR(36),
    is_template TINYINT DEFAULT 0,
    template_type VARCHAR(100)
);
CREATE TABLE documents_accounts
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    document_id VARCHAR(36),
    account_id VARCHAR(36)
);
CREATE TABLE documents_bugs
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    document_id VARCHAR(36),
    bug_id VARCHAR(36)
);
CREATE TABLE documents_cases
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    document_id VARCHAR(36),
    case_id VARCHAR(36)
);
CREATE TABLE documents_contacts
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    document_id VARCHAR(36),
    contact_id VARCHAR(36)
);
CREATE TABLE documents_opportunities
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    document_id VARCHAR(36),
    opportunity_id VARCHAR(36)
);
CREATE TABLE eapm
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    password VARCHAR(255),
    url VARCHAR(255),
    application VARCHAR(100) DEFAULT 'webex',
    api_data LONGTEXT,
    consumer_key VARCHAR(255),
    consumer_secret VARCHAR(255),
    oauth_token VARCHAR(255),
    oauth_secret VARCHAR(255),
    validated TINYINT
);
CREATE TABLE email_addr_bean_rel
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    email_address_id CHAR(36) NOT NULL,
    bean_id CHAR(36) NOT NULL,
    bean_module VARCHAR(100),
    primary_address TINYINT DEFAULT 0,
    reply_to_address TINYINT DEFAULT 0,
    date_created DATETIME,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE email_addresses
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    email_address VARCHAR(255),
    email_address_caps VARCHAR(255),
    invalid_email TINYINT DEFAULT 0,
    opt_out TINYINT DEFAULT 0,
    date_created DATETIME,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE email_cache
(
    ie_id CHAR(36),
    mbox VARCHAR(60),
    subject VARCHAR(255),
    fromaddr VARCHAR(100),
    toaddr VARCHAR(255),
    senddate DATETIME,
    message_id VARCHAR(255),
    mailsize INT UNSIGNED,
    imap_uid INT UNSIGNED,
    msgno INT UNSIGNED,
    recent TINYINT,
    flagged TINYINT,
    answered TINYINT,
    deleted TINYINT,
    seen TINYINT,
    draft TINYINT
);
CREATE TABLE email_marketing
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    deleted TINYINT,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    name VARCHAR(255),
    from_name VARCHAR(100),
    from_addr VARCHAR(100),
    reply_to_name VARCHAR(100),
    reply_to_addr VARCHAR(100),
    inbound_email_id VARCHAR(36),
    date_start DATETIME,
    template_id CHAR(36) NOT NULL,
    status VARCHAR(100),
    campaign_id CHAR(36),
    outbound_email_id CHAR(36),
    all_prospect_lists TINYINT DEFAULT 0
);
CREATE TABLE email_marketing_prospect_lists
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    prospect_list_id VARCHAR(36),
    email_marketing_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE email_templates
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by VARCHAR(36),
    published VARCHAR(3),
    name VARCHAR(255),
    description LONGTEXT,
    subject VARCHAR(255),
    body LONGTEXT,
    body_html LONGTEXT,
    deleted TINYINT,
    assigned_user_id CHAR(36),
    text_only TINYINT,
    type VARCHAR(255)
);
CREATE TABLE emailman
(
    date_entered DATETIME,
    date_modified DATETIME,
    user_id CHAR(36),
    id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    campaign_id CHAR(36),
    marketing_id CHAR(36),
    list_id CHAR(36),
    send_date_time DATETIME,
    modified_user_id CHAR(36),
    in_queue TINYINT DEFAULT 0,
    in_queue_date DATETIME,
    send_attempts INT DEFAULT 0,
    deleted TINYINT DEFAULT 0,
    related_id CHAR(36),
    related_type VARCHAR(100)
);
CREATE TABLE emails
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    assigned_user_id CHAR(36),
    modified_user_id CHAR(36),
    created_by CHAR(36),
    deleted TINYINT,
    date_sent DATETIME,
    message_id VARCHAR(255),
    name VARCHAR(255),
    type VARCHAR(100),
    status VARCHAR(100),
    flagged TINYINT,
    reply_to_status TINYINT,
    intent VARCHAR(100) DEFAULT 'pick',
    mailbox_id CHAR(36),
    parent_type VARCHAR(100),
    parent_id CHAR(36)
);
CREATE TABLE emails_beans
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    email_id CHAR(36),
    bean_id CHAR(36),
    bean_module VARCHAR(100),
    campaign_data LONGTEXT,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE emails_email_addr_rel
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    email_id CHAR(36) NOT NULL,
    address_type VARCHAR(4),
    email_address_id CHAR(36) NOT NULL,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE emails_text
(
    email_id CHAR(36) PRIMARY KEY NOT NULL,
    from_addr VARCHAR(255),
    reply_to_addr VARCHAR(255),
    to_addrs LONGTEXT,
    cc_addrs LONGTEXT,
    bcc_addrs LONGTEXT,
    description LONGTEXT,
    description_html LONGTEXT,
    raw_source LONGTEXT,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE favorites
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    parent_id CHAR(36),
    parent_type VARCHAR(255)
);
CREATE TABLE fields_meta_data
(
    id VARCHAR(255) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    vname VARCHAR(255),
    comments VARCHAR(255),
    help VARCHAR(255),
    custom_module VARCHAR(255),
    type VARCHAR(255),
    len INT,
    required TINYINT DEFAULT 0,
    default_value VARCHAR(255),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    audited TINYINT DEFAULT 0,
    massupdate TINYINT DEFAULT 0,
    duplicate_merge SMALLINT DEFAULT 0,
    reportable TINYINT DEFAULT 1,
    importable VARCHAR(255),
    ext1 VARCHAR(255),
    ext2 VARCHAR(255),
    ext3 VARCHAR(255),
    ext4 LONGTEXT
);
CREATE TABLE folders
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(25),
    folder_type VARCHAR(25),
    parent_folder CHAR(36),
    has_child TINYINT DEFAULT 0,
    is_group TINYINT DEFAULT 0,
    is_dynamic TINYINT DEFAULT 0,
    dynamic_query LONGTEXT,
    assign_to_id CHAR(36),
    created_by CHAR(36) NOT NULL,
    modified_by CHAR(36) NOT NULL,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE folders_rel
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    folder_id CHAR(36) NOT NULL,
    polymorphic_module VARCHAR(25),
    polymorphic_id CHAR(36) NOT NULL,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE folders_subscriptions
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    folder_id CHAR(36) NOT NULL,
    assigned_user_id CHAR(36) NOT NULL
);
CREATE TABLE fp_event_locations
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    address VARCHAR(255),
    address_city VARCHAR(100),
    address_country VARCHAR(100),
    address_postalcode VARCHAR(20),
    address_state VARCHAR(100),
    capacity VARCHAR(255)
);
CREATE TABLE fp_event_locations_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE fp_event_locations_fp_events_1_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    fp_event_locations_fp_events_1fp_event_locations_ida VARCHAR(36),
    fp_event_locations_fp_events_1fp_events_idb VARCHAR(36)
);
CREATE TABLE fp_events
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    duration_hours INT,
    duration_minutes INT,
    date_start DATETIME,
    date_end DATETIME,
    budget DECIMAL(26,6),
    currency_id CHAR(36),
    invite_templates VARCHAR(100),
    accept_redirect VARCHAR(255),
    decline_redirect VARCHAR(255),
    activity_status_type VARCHAR(255)
);
CREATE TABLE fp_events_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE fp_events_contacts_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    fp_events_contactsfp_events_ida VARCHAR(36),
    fp_events_contactscontacts_idb VARCHAR(36),
    invite_status VARCHAR(25) DEFAULT 'Not Invited',
    accept_status VARCHAR(25) DEFAULT 'No Response',
    email_responded INT DEFAULT 0
);
CREATE TABLE fp_events_fp_event_delegates_1_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    fp_events_fp_event_delegates_1fp_events_ida VARCHAR(36),
    fp_events_fp_event_delegates_1fp_event_delegates_idb VARCHAR(36)
);
CREATE TABLE fp_events_fp_event_locations_1_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    fp_events_fp_event_locations_1fp_events_ida VARCHAR(36),
    fp_events_fp_event_locations_1fp_event_locations_idb VARCHAR(36)
);
CREATE TABLE fp_events_leads_1_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    fp_events_leads_1fp_events_ida VARCHAR(36),
    fp_events_leads_1leads_idb VARCHAR(36),
    invite_status VARCHAR(25) DEFAULT 'Not Invited',
    accept_status VARCHAR(25) DEFAULT 'No Response',
    email_responded INT DEFAULT 0
);
CREATE TABLE fp_events_prospects_1_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    fp_events_prospects_1fp_events_ida VARCHAR(36),
    fp_events_prospects_1prospects_idb VARCHAR(36),
    invite_status VARCHAR(25) DEFAULT 'Not Invited',
    accept_status VARCHAR(25) DEFAULT 'No Response',
    email_responded INT DEFAULT 0
);
CREATE TABLE import_maps
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(254),
    source VARCHAR(36),
    enclosure VARCHAR(1) DEFAULT ' ',
    delimiter VARCHAR(1) DEFAULT ',',
    module VARCHAR(36),
    content LONGTEXT,
    default_values LONGTEXT,
    has_header TINYINT DEFAULT 1,
    deleted TINYINT,
    date_entered DATETIME,
    date_modified DATETIME,
    assigned_user_id CHAR(36),
    is_published VARCHAR(3) DEFAULT 'no'
);
CREATE TABLE inbound_email
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    deleted TINYINT DEFAULT 0,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    name VARCHAR(255),
    status VARCHAR(100) DEFAULT 'Active',
    server_url VARCHAR(100),
    email_user VARCHAR(100),
    email_password VARCHAR(100),
    port INT,
    service VARCHAR(50),
    mailbox LONGTEXT,
    delete_seen TINYINT DEFAULT 0,
    mailbox_type VARCHAR(10),
    template_id CHAR(36),
    stored_options LONGTEXT,
    group_id CHAR(36),
    is_personal TINYINT DEFAULT 0,
    groupfolder_id CHAR(36)
);
CREATE TABLE inbound_email_autoreply
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    deleted TINYINT DEFAULT 0,
    date_entered DATETIME,
    date_modified DATETIME,
    autoreplied_to VARCHAR(100),
    ie_id CHAR(36) NOT NULL
);
CREATE TABLE inbound_email_cache_ts
(
    id VARCHAR(255) PRIMARY KEY NOT NULL,
    ie_timestamp INT UNSIGNED
);
CREATE TABLE jjwg_address_cache
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    lat REAL,
    lng REAL
);
CREATE TABLE jjwg_address_cache_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE jjwg_areas
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    city VARCHAR(255),
    state VARCHAR(255),
    country VARCHAR(255),
    coordinates LONGTEXT
);
CREATE TABLE jjwg_areas_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE jjwg_maps
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    distance REAL,
    unit_type VARCHAR(100) DEFAULT 'mi',
    module_type VARCHAR(100) DEFAULT 'Accounts',
    parent_type VARCHAR(255),
    parent_id CHAR(36)
);
CREATE TABLE jjwg_maps_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE jjwg_maps_jjwg_areas_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    jjwg_maps_5304wg_maps_ida VARCHAR(36),
    jjwg_maps_41f2g_areas_idb VARCHAR(36)
);
CREATE TABLE jjwg_maps_jjwg_markers_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    jjwg_maps_b229wg_maps_ida VARCHAR(36),
    jjwg_maps_2e31markers_idb VARCHAR(36)
);
CREATE TABLE jjwg_markers
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    city VARCHAR(255),
    state VARCHAR(255),
    country VARCHAR(255),
    jjwg_maps_lat REAL DEFAULT 0.00000000,
    jjwg_maps_lng REAL DEFAULT 0.00000000,
    marker_image VARCHAR(100) DEFAULT 'company'
);
CREATE TABLE jjwg_markers_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE job_queue
(
    assigned_user_id CHAR(36),
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    deleted TINYINT DEFAULT 0,
    date_entered DATETIME,
    date_modified DATETIME,
    scheduler_id CHAR(36),
    execute_time DATETIME,
    status VARCHAR(20),
    resolution VARCHAR(20),
    message LONGTEXT,
    target VARCHAR(255),
    data LONGTEXT,
    requeue TINYINT DEFAULT 0,
    retry_count TINYINT,
    failure_count TINYINT,
    job_delay INT,
    client VARCHAR(255),
    percent_complete INT
);
CREATE TABLE leads
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    salutation VARCHAR(255),
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    title VARCHAR(100),
    photo VARCHAR(255),
    department VARCHAR(100),
    do_not_call TINYINT DEFAULT 0,
    phone_home VARCHAR(100),
    phone_mobile VARCHAR(100),
    phone_work VARCHAR(100),
    phone_other VARCHAR(100),
    phone_fax VARCHAR(100),
    primary_address_street VARCHAR(150),
    primary_address_city VARCHAR(100),
    primary_address_state VARCHAR(100),
    primary_address_postalcode VARCHAR(20),
    primary_address_country VARCHAR(255),
    alt_address_street VARCHAR(150),
    alt_address_city VARCHAR(100),
    alt_address_state VARCHAR(100),
    alt_address_postalcode VARCHAR(20),
    alt_address_country VARCHAR(255),
    assistant VARCHAR(75),
    assistant_phone VARCHAR(100),
    converted TINYINT DEFAULT 0,
    refered_by VARCHAR(100),
    lead_source VARCHAR(100),
    lead_source_description LONGTEXT,
    status VARCHAR(100),
    status_description LONGTEXT,
    reports_to_id CHAR(36),
    account_name VARCHAR(255),
    account_description LONGTEXT,
    contact_id CHAR(36),
    account_id CHAR(36),
    opportunity_id CHAR(36),
    opportunity_name VARCHAR(255),
    opportunity_amount VARCHAR(50),
    campaign_id CHAR(36),
    birthdate DATE,
    portal_name VARCHAR(255),
    portal_app VARCHAR(255),
    website VARCHAR(255)
);
CREATE TABLE leads_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE leads_cstm
(
    id_c CHAR(36) PRIMARY KEY NOT NULL,
    jjwg_maps_lng_c REAL DEFAULT 0.00000000,
    jjwg_maps_lat_c REAL DEFAULT 0.00000000,
    jjwg_maps_geocode_status_c VARCHAR(255),
    jjwg_maps_address_c VARCHAR(255)
);
CREATE TABLE linked_documents
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    parent_id VARCHAR(36),
    parent_type VARCHAR(25),
    document_id VARCHAR(36),
    document_revision_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE meetings
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(50),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    location VARCHAR(50),
    password VARCHAR(50),
    join_url VARCHAR(200),
    host_url VARCHAR(400),
    displayed_url VARCHAR(400),
    creator VARCHAR(50),
    external_id VARCHAR(50),
    duration_hours INT,
    duration_minutes INT,
    date_start DATETIME,
    date_end DATETIME,
    parent_type VARCHAR(100),
    status VARCHAR(100) DEFAULT 'Planned',
    type VARCHAR(255) DEFAULT 'Sugar',
    parent_id CHAR(36),
    reminder_time INT DEFAULT -1,
    email_reminder_time INT DEFAULT -1,
    email_reminder_sent TINYINT DEFAULT 0,
    outlook_id VARCHAR(255),
    sequence INT DEFAULT 0,
    repeat_type VARCHAR(36),
    repeat_interval INT DEFAULT 1,
    repeat_dow VARCHAR(7),
    repeat_until DATE,
    repeat_count INT,
    repeat_parent_id CHAR(36),
    recurring_source VARCHAR(36)
);
CREATE TABLE meetings_contacts
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    meeting_id VARCHAR(36),
    contact_id VARCHAR(36),
    required VARCHAR(1) DEFAULT '1',
    accept_status VARCHAR(25) DEFAULT 'none',
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE meetings_cstm
(
    id_c CHAR(36) PRIMARY KEY NOT NULL,
    jjwg_maps_lng_c REAL DEFAULT 0.00000000,
    jjwg_maps_lat_c REAL DEFAULT 0.00000000,
    jjwg_maps_geocode_status_c VARCHAR(255),
    jjwg_maps_address_c VARCHAR(255)
);
CREATE TABLE meetings_leads
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    meeting_id VARCHAR(36),
    lead_id VARCHAR(36),
    required VARCHAR(1) DEFAULT '1',
    accept_status VARCHAR(25) DEFAULT 'none',
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE meetings_users
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    meeting_id VARCHAR(36),
    user_id VARCHAR(36),
    required VARCHAR(1) DEFAULT '1',
    accept_status VARCHAR(25) DEFAULT 'none',
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE notes
(
    assigned_user_id CHAR(36),
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    name VARCHAR(255),
    file_mime_type VARCHAR(100),
    filename VARCHAR(255),
    parent_type VARCHAR(255),
    parent_id CHAR(36),
    contact_id CHAR(36),
    portal_flag TINYINT,
    embed_flag TINYINT DEFAULT 0,
    description LONGTEXT,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE oauth_consumer
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    c_key VARCHAR(255),
    c_secret VARCHAR(255)
);
CREATE TABLE oauth_nonce
(
    conskey VARCHAR(32) NOT NULL,
    nonce VARCHAR(32) NOT NULL,
    nonce_ts BIGINT,
    PRIMARY KEY (conskey, nonce)
);
CREATE TABLE oauth_tokens
(
    id CHAR(36) NOT NULL,
    secret VARCHAR(32),
    tstate VARCHAR(1),
    consumer CHAR(36) NOT NULL,
    token_ts BIGINT,
    verify VARCHAR(32),
    deleted TINYINT DEFAULT 0 NOT NULL,
    callback_url VARCHAR(255),
    assigned_user_id CHAR(36),
    PRIMARY KEY (id, deleted)
);
CREATE TABLE opportunities
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(50),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    opportunity_type VARCHAR(255),
    campaign_id CHAR(36),
    lead_source VARCHAR(50),
    amount DOUBLE,
    amount_usdollar DOUBLE,
    currency_id CHAR(36),
    date_closed DATE,
    next_step VARCHAR(100),
    sales_stage VARCHAR(255),
    probability DOUBLE
);
CREATE TABLE opportunities_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE opportunities_contacts
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    contact_id VARCHAR(36),
    opportunity_id VARCHAR(36),
    contact_role VARCHAR(50),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE opportunities_cstm
(
    id_c CHAR(36) PRIMARY KEY NOT NULL,
    jjwg_maps_lng_c REAL DEFAULT 0.00000000,
    jjwg_maps_lat_c REAL DEFAULT 0.00000000,
    jjwg_maps_geocode_status_c VARCHAR(255),
    jjwg_maps_address_c VARCHAR(255)
);
CREATE TABLE outbound_email
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(50),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    type VARCHAR(15) DEFAULT 'user',
    user_id CHAR(36) NOT NULL,
    mail_sendtype VARCHAR(8) DEFAULT 'smtp',
    mail_smtptype VARCHAR(20) DEFAULT 'other',
    mail_smtpserver VARCHAR(100),
    mail_smtpport INT DEFAULT 0,
    mail_smtpuser VARCHAR(100),
    mail_smtppass VARCHAR(100),
    mail_smtpauth_req TINYINT DEFAULT 0,
    mail_smtpssl VARCHAR(1) DEFAULT '0'
);
CREATE TABLE outbound_email_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE project
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    assigned_user_id CHAR(36),
    modified_user_id CHAR(36),
    created_by CHAR(36),
    name VARCHAR(50),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    estimated_start_date DATE,
    estimated_end_date DATE,
    status VARCHAR(255),
    priority VARCHAR(255),
    override_business_hours TINYINT DEFAULT 0
);
CREATE TABLE project_contacts_1_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    project_contacts_1project_ida VARCHAR(36),
    project_contacts_1contacts_idb VARCHAR(36)
);
CREATE TABLE project_cstm
(
    id_c CHAR(36) PRIMARY KEY NOT NULL,
    jjwg_maps_lng_c REAL DEFAULT 0.00000000,
    jjwg_maps_lat_c REAL DEFAULT 0.00000000,
    jjwg_maps_geocode_status_c VARCHAR(255),
    jjwg_maps_address_c VARCHAR(255)
);
CREATE TABLE project_task
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    project_id CHAR(36) NOT NULL,
    project_task_id INT,
    name VARCHAR(50),
    status VARCHAR(255),
    relationship_type VARCHAR(255),
    description LONGTEXT,
    predecessors LONGTEXT,
    date_start DATE,
    time_start INT,
    time_finish INT,
    date_finish DATE,
    duration INT,
    duration_unit LONGTEXT,
    actual_duration INT,
    percent_complete INT,
    date_due DATE,
    time_due TIME,
    parent_task_id INT,
    assigned_user_id CHAR(36),
    modified_user_id CHAR(36),
    priority VARCHAR(255),
    created_by CHAR(36),
    milestone_flag TINYINT,
    order_number INT DEFAULT 1,
    task_number INT,
    estimated_effort INT,
    actual_effort INT,
    deleted TINYINT DEFAULT 0,
    utilization INT DEFAULT 100
);
CREATE TABLE project_task_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE project_users_1_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    project_users_1project_ida VARCHAR(36),
    project_users_1users_idb VARCHAR(36)
);
CREATE TABLE projects_accounts
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    account_id VARCHAR(36),
    project_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE projects_bugs
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    bug_id VARCHAR(36),
    project_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE projects_cases
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    case_id VARCHAR(36),
    project_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE projects_contacts
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    contact_id VARCHAR(36),
    project_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE projects_opportunities
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    opportunity_id VARCHAR(36),
    project_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE projects_products
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    product_id VARCHAR(36),
    project_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE prospect_list_campaigns
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    prospect_list_id VARCHAR(36),
    campaign_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE prospect_lists
(
    assigned_user_id CHAR(36),
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(50),
    list_type VARCHAR(100),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    deleted TINYINT,
    description LONGTEXT,
    domain_name VARCHAR(255)
);
CREATE TABLE prospect_lists_prospects
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    prospect_list_id VARCHAR(36),
    related_id VARCHAR(36),
    related_type VARCHAR(25),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE prospects
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    salutation VARCHAR(255),
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    title VARCHAR(100),
    photo VARCHAR(255),
    department VARCHAR(255),
    do_not_call TINYINT DEFAULT 0,
    phone_home VARCHAR(100),
    phone_mobile VARCHAR(100),
    phone_work VARCHAR(100),
    phone_other VARCHAR(100),
    phone_fax VARCHAR(100),
    primary_address_street VARCHAR(150),
    primary_address_city VARCHAR(100),
    primary_address_state VARCHAR(100),
    primary_address_postalcode VARCHAR(20),
    primary_address_country VARCHAR(255),
    alt_address_street VARCHAR(150),
    alt_address_city VARCHAR(100),
    alt_address_state VARCHAR(100),
    alt_address_postalcode VARCHAR(20),
    alt_address_country VARCHAR(255),
    assistant VARCHAR(75),
    assistant_phone VARCHAR(100),
    tracker_key INT NOT NULL AUTO_INCREMENT,
    birthdate DATE,
    lead_id CHAR(36),
    account_name VARCHAR(150),
    campaign_id CHAR(36)
);
CREATE TABLE prospects_cstm
(
    id_c CHAR(36) PRIMARY KEY NOT NULL,
    jjwg_maps_lng_c REAL DEFAULT 0.00000000,
    jjwg_maps_lat_c REAL DEFAULT 0.00000000,
    jjwg_maps_geocode_status_c VARCHAR(255),
    jjwg_maps_address_c VARCHAR(255)
);
CREATE TABLE relationships
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    relationship_name VARCHAR(150),
    lhs_module VARCHAR(100),
    lhs_table VARCHAR(64),
    lhs_key VARCHAR(64),
    rhs_module VARCHAR(100),
    rhs_table VARCHAR(64),
    rhs_key VARCHAR(64),
    join_table VARCHAR(64),
    join_key_lhs VARCHAR(64),
    join_key_rhs VARCHAR(64),
    relationship_type VARCHAR(64),
    relationship_role_column VARCHAR(64),
    relationship_role_column_value VARCHAR(50),
    reverse TINYINT DEFAULT 0,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE releases
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    deleted TINYINT,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    name VARCHAR(50),
    list_order INT,
    status VARCHAR(100)
);
CREATE TABLE reminders
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    popup TINYINT,
    email TINYINT,
    email_sent TINYINT,
    timer_popup VARCHAR(32),
    timer_email VARCHAR(32),
    related_event_module VARCHAR(32),
    related_event_module_id CHAR(36) NOT NULL
);
CREATE TABLE reminders_invitees
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    reminder_id CHAR(36) NOT NULL,
    related_invitee_module VARCHAR(32),
    related_invitee_module_id CHAR(36) NOT NULL
);
CREATE TABLE roles
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    name VARCHAR(150),
    description LONGTEXT,
    modules LONGTEXT,
    deleted TINYINT
);
CREATE TABLE roles_modules
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    role_id VARCHAR(36),
    module_id VARCHAR(36),
    allow TINYINT DEFAULT 0,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE roles_users
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    role_id VARCHAR(36),
    user_id VARCHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE saved_search
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(150),
    search_module VARCHAR(150),
    deleted TINYINT,
    date_entered DATETIME,
    date_modified DATETIME,
    assigned_user_id CHAR(36),
    contents LONGTEXT,
    description LONGTEXT
);
CREATE TABLE schedulers
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    deleted TINYINT DEFAULT 0,
    date_entered DATETIME,
    date_modified DATETIME,
    created_by CHAR(36),
    modified_user_id CHAR(36),
    name VARCHAR(255),
    job VARCHAR(255),
    date_time_start DATETIME,
    date_time_end DATETIME,
    job_interval VARCHAR(100),
    time_from TIME,
    time_to TIME,
    last_run DATETIME,
    status VARCHAR(100),
    catch_up TINYINT DEFAULT 1
);
CREATE TABLE securitygroups
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    noninheritable TINYINT
);
CREATE TABLE securitygroups_acl_roles
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    securitygroup_id CHAR(36),
    role_id CHAR(36),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE securitygroups_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE securitygroups_default
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    securitygroup_id CHAR(36),
    module VARCHAR(50),
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE securitygroups_records
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    securitygroup_id CHAR(36),
    record_id CHAR(36),
    module CHAR(36),
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    deleted TINYINT DEFAULT 0
);
CREATE TABLE securitygroups_users
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    securitygroup_id VARCHAR(36),
    user_id VARCHAR(36),
    primary_group TINYINT,
    noninheritable TINYINT DEFAULT 0
);
CREATE TABLE spots
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    config LONGTEXT,
    type VARCHAR(255)
);
CREATE TABLE sugarfeed
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    related_module VARCHAR(100),
    related_id CHAR(36),
    link_url VARCHAR(255),
    link_type VARCHAR(30)
);
CREATE TABLE tasks
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(50),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    status VARCHAR(100) DEFAULT 'Not Started',
    date_due_flag TINYINT DEFAULT 0,
    date_due DATETIME,
    date_start_flag TINYINT DEFAULT 0,
    date_start DATETIME,
    parent_type VARCHAR(255),
    parent_id CHAR(36),
    contact_id CHAR(36),
    priority VARCHAR(100)
);
CREATE TABLE templatesectionline
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    thumbnail VARCHAR(255),
    grp VARCHAR(255),
    ord INT
);
CREATE TABLE terri_territoire
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36)
);
CREATE TABLE terri_territoire_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE terri_territoire_thin_cycleplans_1_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    terri_territoire_thin_cycleplans_1terri_territoire_ida VARCHAR(36),
    terri_territoire_thin_cycleplans_1thin_cycleplans_idb VARCHAR(36)
);
CREATE TABLE thin_cycle_plan_targets_contacts_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    thin_cycle_plan_targets_contactsthin_cycleplantargets_ida VARCHAR(36),
    thin_cycle_plan_targets_contactscontacts_idb VARCHAR(36)
);
CREATE TABLE thin_cycleplans
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    active TINYINT DEFAULT 0,
    start_date DATE,
    end_date DATE,
    call_frequency_objective VARCHAR(255),
    submitted_calls VARCHAR(255)
);
CREATE TABLE thin_cycleplans_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE thin_cycleplans_cstm
(
    id_c CHAR(36) PRIMARY KEY NOT NULL
);
CREATE TABLE thin_cycleplans_terri_territoire_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    thin_cycleplans_terri_territoirethin_cycleplans_ida VARCHAR(36),
    thin_cycleplans_terri_territoireterri_territoire_idb VARCHAR(36)
);
CREATE TABLE thin_cycleplans_thin_cycleplantargets_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    thin_cycleplans_thin_cycleplantargetsthin_cycleplans_ida VARCHAR(36),
    thin_cycleplans_thin_cycleplantargetsthin_cycleplantargets_idb VARCHAR(36)
);
CREATE TABLE thin_cycleplantargets
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    name VARCHAR(255),
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    description LONGTEXT,
    deleted TINYINT DEFAULT 0,
    assigned_user_id CHAR(36),
    call_frequency_target INT,
    submitted_calls INT DEFAULT 0,
    customer_tier VARCHAR(100)
);
CREATE TABLE thin_cycleplantargets_audit
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    parent_id CHAR(36) NOT NULL,
    date_created DATETIME,
    created_by VARCHAR(36),
    field_name VARCHAR(100),
    data_type VARCHAR(100),
    before_value_string VARCHAR(255),
    after_value_string VARCHAR(255),
    before_value_text LONGTEXT,
    after_value_text LONGTEXT
);
CREATE TABLE thin_cycleplantargets_contacts_c
(
    id VARCHAR(36) PRIMARY KEY NOT NULL,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0,
    thin_cycleplantargets_contactscontacts_ida VARCHAR(36),
    thin_cycleplantargets_contactsthin_cycleplantargets_idb VARCHAR(36)
);
CREATE TABLE thin_cycleplantargets_cstm
(
    id_c CHAR(36) PRIMARY KEY NOT NULL
);
CREATE TABLE tracker
(
    id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    monitor_id CHAR(36) NOT NULL,
    user_id VARCHAR(36),
    module_name VARCHAR(255),
    item_id VARCHAR(36),
    item_summary VARCHAR(255),
    date_modified DATETIME,
    action VARCHAR(255),
    session_id VARCHAR(36),
    visible TINYINT DEFAULT 0,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE upgrade_history
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    filename VARCHAR(255),
    md5sum VARCHAR(32),
    type VARCHAR(30),
    status VARCHAR(50),
    version VARCHAR(64),
    name VARCHAR(255),
    description LONGTEXT,
    id_name VARCHAR(255),
    manifest LONGTEXT,
    date_entered DATETIME,
    enabled TINYINT DEFAULT 1
);
CREATE TABLE user_preferences
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    category VARCHAR(50),
    deleted TINYINT DEFAULT 0,
    date_entered DATETIME,
    date_modified DATETIME,
    assigned_user_id CHAR(36),
    contents LONGTEXT
);
CREATE TABLE users
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    user_name VARCHAR(60),
    user_hash VARCHAR(255),
    system_generated_password TINYINT,
    pwd_last_changed DATETIME,
    authenticate_id VARCHAR(100),
    sugar_login TINYINT DEFAULT 1,
    first_name VARCHAR(30),
    last_name VARCHAR(30),
    is_admin TINYINT DEFAULT 0,
    external_auth_only TINYINT DEFAULT 0,
    receive_notifications TINYINT DEFAULT 1,
    description LONGTEXT,
    date_entered DATETIME,
    date_modified DATETIME,
    modified_user_id CHAR(36),
    created_by CHAR(36),
    title VARCHAR(50),
    photo VARCHAR(255),
    department VARCHAR(50),
    phone_home VARCHAR(50),
    phone_mobile VARCHAR(50),
    phone_work VARCHAR(50),
    phone_other VARCHAR(50),
    phone_fax VARCHAR(50),
    status VARCHAR(100),
    address_street VARCHAR(150),
    address_city VARCHAR(100),
    address_state VARCHAR(100),
    address_country VARCHAR(100),
    address_postalcode VARCHAR(20),
    deleted TINYINT,
    portal_only TINYINT DEFAULT 0,
    show_on_employees TINYINT DEFAULT 1,
    employee_status VARCHAR(100),
    messenger_id VARCHAR(100),
    messenger_type VARCHAR(100),
    reports_to_id CHAR(36),
    is_group TINYINT
);
CREATE TABLE users_feeds
(
    user_id VARCHAR(36),
    feed_id VARCHAR(36),
    rank INT,
    date_modified DATETIME,
    deleted TINYINT DEFAULT 0
);
CREATE TABLE users_last_import
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    assigned_user_id CHAR(36),
    import_module VARCHAR(36),
    bean_type VARCHAR(36),
    bean_id CHAR(36),
    deleted TINYINT
);
CREATE TABLE users_password_link
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    username VARCHAR(36),
    date_generated DATETIME,
    deleted TINYINT
);
CREATE TABLE users_signatures
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    date_entered DATETIME,
    date_modified DATETIME,
    deleted TINYINT,
    user_id VARCHAR(36),
    name VARCHAR(255),
    signature LONGTEXT,
    signature_html LONGTEXT
);
CREATE TABLE vcals
(
    id CHAR(36) PRIMARY KEY NOT NULL,
    deleted TINYINT,
    date_entered DATETIME,
    date_modified DATETIME,
    user_id CHAR(36) NOT NULL,
    type VARCHAR(100),
    source VARCHAR(100),
    content LONGTEXT
);
CREATE INDEX idx_accnt_assigned_del ON accounts (deleted, assigned_user_id);
CREATE INDEX idx_accnt_id_del ON accounts (id, deleted);
CREATE INDEX idx_accnt_name_del ON accounts (name, deleted);
CREATE INDEX idx_accnt_parent_id ON accounts (parent_id);
CREATE INDEX idx_accounts_parent_id ON accounts_audit (parent_id);
CREATE INDEX idx_acc_bug_acc ON accounts_bugs (account_id);
CREATE INDEX idx_acc_bug_bug ON accounts_bugs (bug_id);
CREATE INDEX idx_account_bug ON accounts_bugs (account_id, bug_id);
CREATE INDEX idx_acc_acc_case ON accounts_cases (case_id);
CREATE INDEX idx_acc_case_acc ON accounts_cases (account_id);
CREATE INDEX idx_account_contact ON accounts_contacts (account_id, contact_id);
CREATE INDEX idx_contid_del_accid ON accounts_contacts (contact_id, deleted, account_id);
CREATE INDEX idx_account_opportunity ON accounts_opportunities (account_id, opportunity_id);
CREATE INDEX idx_oppid_del_accid ON accounts_opportunities (opportunity_id, deleted, account_id);
CREATE INDEX idx_aclaction_id_del ON acl_actions (id, deleted);
CREATE INDEX idx_category_name ON acl_actions (category, name);
CREATE INDEX idx_aclrole_id_del ON acl_roles (id, deleted);
CREATE INDEX idx_acl_action_id ON acl_roles_actions (action_id);
CREATE INDEX idx_acl_role_id ON acl_roles_actions (role_id);
CREATE INDEX idx_aclrole_action ON acl_roles_actions (role_id, action_id);
CREATE INDEX idx_aclrole_id ON acl_roles_users (role_id);
CREATE INDEX idx_aclrole_user ON acl_roles_users (role_id, user_id);
CREATE INDEX idx_acluser_id ON acl_roles_users (user_id);
CREATE INDEX ab_user_bean_idx ON address_book (assigned_user_id, bean);
CREATE INDEX idx_am_projecttemplates_parent_id ON am_projecttemplates_audit (parent_id);
CREATE INDEX am_projecttemplates_contacts_1_alt ON am_projecttemplates_contacts_1_c (am_projecttemplates_ida, contacts_idb);
CREATE INDEX am_projecttemplates_project_1_alt ON am_projecttemplates_project_1_c (am_projecttemplates_project_1project_idb);
CREATE INDEX am_projecttemplates_project_1_ida1 ON am_projecttemplates_project_1_c (am_projecttemplates_project_1am_projecttemplates_ida);
CREATE INDEX am_projecttemplates_users_1_alt ON am_projecttemplates_users_1_c (am_projecttemplates_ida, users_idb);
CREATE INDEX am_tasktemplates_am_projecttemplates_alt ON am_tasktemplates_am_projecttemplates_c (am_tasktemplates_am_projecttemplatesam_tasktemplates_idb);
CREATE INDEX am_tasktemplates_am_projecttemplates_ida1 ON am_tasktemplates_am_projecttemplates_c (am_tasktemplates_am_projecttemplatesam_projecttemplates_ida);
CREATE INDEX idx_am_tasktemplates_parent_id ON am_tasktemplates_audit (parent_id);
CREATE INDEX idx_aod_index_parent_id ON aod_index_audit (parent_id);
CREATE INDEX idx_record_id ON aod_indexevent (record_id);
CREATE INDEX idx_record_module ON aod_indexevent (record_module);
CREATE INDEX idx_aod_indexevent_parent_id ON aod_indexevent_audit (parent_id);
CREATE INDEX idx_aok_knowledge_base_categories_parent_id ON aok_knowledge_base_categories_audit (parent_id);
CREATE INDEX idx_aok_knowledgebase_parent_id ON aok_knowledgebase_audit (parent_id);
CREATE INDEX aok_knowledgebase_categories_alt ON aok_knowledgebase_categories (aok_knowledgebase_id, aok_knowledge_base_categories_id);
CREATE INDEX idx_aop_case_events_parent_id ON aop_case_events_audit (parent_id);
CREATE INDEX idx_aop_case_updates_parent_id ON aop_case_updates_audit (parent_id);
CREATE INDEX aor_conditions_index_report_id ON aor_conditions (aor_report_id);
CREATE INDEX aor_fields_index_report_id ON aor_fields (aor_report_id);
CREATE INDEX idx_aor_reports_parent_id ON aor_reports_audit (parent_id);
CREATE INDEX idx_aos_contracts_parent_id ON aos_contracts_audit (parent_id);
CREATE INDEX aos_contracts_documents_alt ON aos_contracts_documents (aos_contracts_id, documents_id);
CREATE INDEX idx_aos_invoices_parent_id ON aos_invoices_audit (parent_id);
CREATE INDEX idx_aos_line_item_groups_parent_id ON aos_line_item_groups_audit (parent_id);
CREATE INDEX idx_aos_pdf_templates_parent_id ON aos_pdf_templates_audit (parent_id);
CREATE INDEX idx_aos_product_categories_parent_id ON aos_product_categories_audit (parent_id);
CREATE INDEX idx_aos_products_parent_id ON aos_products_audit (parent_id);
CREATE INDEX idx_aospq_par_del ON aos_products_quotes (parent_id, parent_type, deleted);
CREATE INDEX idx_aos_products_quotes_parent_id ON aos_products_quotes_audit (parent_id);
CREATE INDEX aos_quotes_aos_invoices_alt ON aos_quotes_aos_invoices_c (aos_quotes77d9_quotes_ida, aos_quotes6b83nvoices_idb);
CREATE INDEX idx_aos_quotes_parent_id ON aos_quotes_audit (parent_id);
CREATE INDEX aos_quotes_aos_contracts_alt ON aos_quotes_os_contracts_c (aos_quotese81e_quotes_ida, aos_quotes4dc0ntracts_idb);
CREATE INDEX aos_quotes_project_alt ON aos_quotes_project_c (aos_quotes1112_quotes_ida, aos_quotes7207project_idb);
CREATE INDEX aow_action_index_workflow_id ON aow_actions (aow_workflow_id);
CREATE INDEX aow_conditions_index_workflow_id ON aow_conditions (aow_workflow_id);
CREATE INDEX aow_processed_index_status ON aow_processed (status);
CREATE INDEX aow_processed_index_workflow ON aow_processed (aow_workflow_id, status, parent_id, deleted);
CREATE INDEX aow_processed_index_workflow_id ON aow_processed (aow_workflow_id);
CREATE INDEX idx_actid_del_freid ON aow_processed_aow_actions (aow_action_id, deleted, aow_processed_id);
CREATE INDEX idx_aow_processed_aow_actions ON aow_processed_aow_actions (aow_processed_id, aow_action_id);
CREATE INDEX aow_workflow_index_status ON aow_workflow (status);
CREATE INDEX idx_aow_workflow_parent_id ON aow_workflow_audit (parent_id);
CREATE UNIQUE INDEX bugsnumk ON bugs (bug_number);
CREATE INDEX bug_number ON bugs (bug_number);
CREATE INDEX idx_bug_name ON bugs (name);
CREATE INDEX idx_bugs_assigned_user ON bugs (assigned_user_id);
CREATE INDEX idx_bugs_parent_id ON bugs_audit (parent_id);
CREATE INDEX idx_call_name ON calls (name);
CREATE INDEX idx_calls_assigned_del ON calls (deleted, assigned_user_id);
CREATE INDEX idx_calls_date_start ON calls (date_start);
CREATE INDEX idx_calls_par_del ON calls (parent_id, parent_type, deleted);
CREATE INDEX idx_status ON calls (status);
CREATE INDEX idx_call_contact ON calls_contacts (call_id, contact_id);
CREATE INDEX idx_con_call_call ON calls_contacts (call_id);
CREATE INDEX idx_con_call_con ON calls_contacts (contact_id);
CREATE INDEX idx_call_lead ON calls_leads (call_id, lead_id);
CREATE INDEX idx_lead_call_call ON calls_leads (call_id);
CREATE INDEX idx_lead_call_lead ON calls_leads (lead_id);
CREATE INDEX idx_calls_reschedule_parent_id ON calls_reschedule_audit (parent_id);
CREATE INDEX idx_call_users ON calls_users (call_id, user_id);
CREATE INDEX idx_usr_call_call ON calls_users (call_id);
CREATE INDEX idx_usr_call_usr ON calls_users (user_id);
CREATE INDEX idx_camp_campaign_id ON campaign_log (campaign_id);
CREATE INDEX idx_camp_more_info ON campaign_log (more_information);
CREATE INDEX idx_camp_tracker ON campaign_log (target_tracker_key);
CREATE INDEX idx_target_id ON campaign_log (target_id);
CREATE INDEX idx_target_id_deleted ON campaign_log (target_id, deleted);
CREATE INDEX campaign_tracker_key_idx ON campaign_trkrs (tracker_key);
CREATE INDEX camp_auto_tracker_key ON campaigns (tracker_key);
CREATE INDEX idx_campaign_name ON campaigns (name);
CREATE INDEX idx_campaigns_parent_id ON campaigns_audit (parent_id);
CREATE UNIQUE INDEX casesnumk ON cases (case_number);
CREATE INDEX case_number ON cases (case_number);
CREATE INDEX idx_account_id ON cases (account_id);
CREATE INDEX idx_case_name ON cases (name);
CREATE INDEX idx_cases_stat_del ON cases (assigned_user_id, status, deleted);
CREATE INDEX idx_cases_parent_id ON cases_audit (parent_id);
CREATE INDEX idx_cas_bug_bug ON cases_bugs (bug_id);
CREATE INDEX idx_cas_bug_cas ON cases_bugs (case_id);
CREATE INDEX idx_case_bug ON cases_bugs (case_id, bug_id);
CREATE INDEX idx_config_cat ON config (category);
CREATE INDEX idx_cont_assigned ON contacts (assigned_user_id);
CREATE INDEX idx_cont_del_reports ON contacts (deleted, reports_to_id, last_name);
CREATE INDEX idx_cont_last_first ON contacts (last_name, first_name, deleted);
CREATE INDEX idx_contacts_del_last ON contacts (deleted, last_name);
CREATE INDEX idx_del_id_user ON contacts (deleted, id, assigned_user_id);
CREATE INDEX idx_reports_to_id ON contacts (reports_to_id);
CREATE INDEX idx_contacts_parent_id ON contacts_audit (parent_id);
CREATE INDEX idx_con_bug_bug ON contacts_bugs (bug_id);
CREATE INDEX idx_con_bug_con ON contacts_bugs (contact_id);
CREATE INDEX idx_contact_bug ON contacts_bugs (contact_id, bug_id);
CREATE INDEX idx_con_case_case ON contacts_cases (case_id);
CREATE INDEX idx_con_case_con ON contacts_cases (contact_id);
CREATE INDEX idx_contacts_cases ON contacts_cases (contact_id, case_id);
CREATE INDEX idx_con_users_con ON contacts_users (contact_id);
CREATE INDEX idx_con_users_user ON contacts_users (user_id);
CREATE INDEX idx_contacts_users ON contacts_users (contact_id, user_id);
CREATE INDEX idx_cron_remove_document_bean_id ON cron_remove_documents (bean_id);
CREATE INDEX idx_cron_remove_document_stamp ON cron_remove_documents (date_modified);
CREATE INDEX idx_currency_name ON currencies (name, deleted);
CREATE INDEX idx_beanid_set_num ON custom_fields (bean_id, set_num);
CREATE INDEX documentrevision_mimetype ON document_revisions (file_mime_type);
CREATE INDEX idx_doc_cat ON documents (category_id, subcategory_id);
CREATE INDEX documents_accounts_account_id ON documents_accounts (account_id, document_id);
CREATE INDEX documents_accounts_document_id ON documents_accounts (document_id, account_id);
CREATE INDEX documents_bugs_bug_id ON documents_bugs (bug_id, document_id);
CREATE INDEX documents_bugs_document_id ON documents_bugs (document_id, bug_id);
CREATE INDEX documents_cases_case_id ON documents_cases (case_id, document_id);
CREATE INDEX documents_cases_document_id ON documents_cases (document_id, case_id);
CREATE INDEX documents_contacts_contact_id ON documents_contacts (contact_id, document_id);
CREATE INDEX documents_contacts_document_id ON documents_contacts (document_id, contact_id);
CREATE INDEX idx_docu_oppo_docu_id ON documents_opportunities (document_id, opportunity_id);
CREATE INDEX idx_docu_opps_oppo_id ON documents_opportunities (opportunity_id, document_id);
CREATE INDEX idx_app_active ON eapm (assigned_user_id, application, validated);
CREATE INDEX idx_bean_id ON email_addr_bean_rel (bean_id, bean_module);
CREATE INDEX idx_email_address_id ON email_addr_bean_rel (email_address_id);
CREATE INDEX idx_ea_caps_opt_out_invalid ON email_addresses (email_address_caps, opt_out, invalid_email);
CREATE INDEX idx_ea_opt_out_invalid ON email_addresses (email_address, opt_out, invalid_email);
CREATE INDEX idx_ie_id ON email_cache (ie_id);
CREATE INDEX idx_mail_date ON email_cache (ie_id, mbox, senddate);
CREATE INDEX idx_mail_from ON email_cache (ie_id, mbox, fromaddr);
CREATE INDEX idx_mail_subj ON email_cache (subject);
CREATE INDEX idx_mail_to ON email_cache (toaddr);
CREATE INDEX idx_emmkit_del ON email_marketing (deleted);
CREATE INDEX idx_emmkt_name ON email_marketing (name);
CREATE INDEX email_mp_prospects ON email_marketing_prospect_lists (email_marketing_id, prospect_list_id);
CREATE INDEX idx_email_template_name ON email_templates (name);
CREATE INDEX idx_eman_campaign_id ON emailman (campaign_id);
CREATE INDEX idx_eman_list ON emailman (list_id, user_id, deleted);
CREATE INDEX idx_eman_relid_reltype_id ON emailman (related_id, related_type, campaign_id);
CREATE INDEX idx_email_assigned ON emails (assigned_user_id, type, status);
CREATE INDEX idx_email_name ON emails (name);
CREATE INDEX idx_email_parent_id ON emails (parent_id);
CREATE INDEX idx_message_id ON emails (message_id);
CREATE INDEX idx_emails_beans_bean_id ON emails_beans (bean_id);
CREATE INDEX idx_emails_beans_email_bean ON emails_beans (email_id, bean_id, deleted);
CREATE INDEX idx_eearl_address_id ON emails_email_addr_rel (email_address_id);
CREATE INDEX idx_eearl_email_id ON emails_email_addr_rel (email_id, address_type);
CREATE INDEX emails_textfromaddr ON emails_text (from_addr);
CREATE INDEX idx_meta_cm_del ON fields_meta_data (custom_module, deleted);
CREATE INDEX idx_meta_id_del ON fields_meta_data (id, deleted);
CREATE INDEX idx_parent_folder ON folders (parent_folder);
CREATE INDEX idx_fr_id_deleted_poly ON folders_rel (folder_id, deleted, polymorphic_id);
CREATE INDEX idx_poly_module_poly_id ON folders_rel (polymorphic_module, polymorphic_id);
CREATE INDEX idx_folder_id_assigned_user_id ON folders_subscriptions (folder_id, assigned_user_id);
CREATE INDEX idx_fp_event_locations_parent_id ON fp_event_locations_audit (parent_id);
CREATE INDEX fp_event_locations_fp_events_1_alt ON fp_event_locations_fp_events_1_c (fp_event_locations_fp_events_1fp_events_idb);
CREATE INDEX fp_event_locations_fp_events_1_ida1 ON fp_event_locations_fp_events_1_c (fp_event_locations_fp_events_1fp_event_locations_ida);
CREATE INDEX idx_fp_events_parent_id ON fp_events_audit (parent_id);
CREATE INDEX fp_events_contacts_alt ON fp_events_contacts_c (fp_events_contactsfp_events_ida, fp_events_contactscontacts_idb);
CREATE INDEX fp_events_fp_event_delegates_1_alt ON fp_events_fp_event_delegates_1_c (fp_events_fp_event_delegates_1fp_event_delegates_idb);
CREATE INDEX fp_events_fp_event_delegates_1_ida1 ON fp_events_fp_event_delegates_1_c (fp_events_fp_event_delegates_1fp_events_ida);
CREATE INDEX fp_events_fp_event_locations_1_alt ON fp_events_fp_event_locations_1_c (fp_events_fp_event_locations_1fp_events_ida, fp_events_fp_event_locations_1fp_event_locations_idb);
CREATE INDEX fp_events_leads_1_alt ON fp_events_leads_1_c (fp_events_leads_1fp_events_ida, fp_events_leads_1leads_idb);
CREATE INDEX fp_events_prospects_1_alt ON fp_events_prospects_1_c (fp_events_prospects_1fp_events_ida, fp_events_prospects_1prospects_idb);
CREATE INDEX idx_owner_module_name ON import_maps (assigned_user_id, module, name, deleted);
CREATE INDEX idx_ie_autoreplied_to ON inbound_email_autoreply (autoreplied_to);
CREATE INDEX idx_jjwg_address_cache_parent_id ON jjwg_address_cache_audit (parent_id);
CREATE INDEX idx_jjwg_areas_parent_id ON jjwg_areas_audit (parent_id);
CREATE INDEX idx_jjwg_maps_parent_id ON jjwg_maps_audit (parent_id);
CREATE INDEX jjwg_maps_jjwg_areas_alt ON jjwg_maps_jjwg_areas_c (jjwg_maps_5304wg_maps_ida, jjwg_maps_41f2g_areas_idb);
CREATE INDEX jjwg_maps_jjwg_markers_alt ON jjwg_maps_jjwg_markers_c (jjwg_maps_b229wg_maps_ida, jjwg_maps_2e31markers_idb);
CREATE INDEX idx_jjwg_markers_parent_id ON jjwg_markers_audit (parent_id);
CREATE INDEX idx_status_entered ON job_queue (status, date_entered);
CREATE INDEX idx_status_modified ON job_queue (status, date_modified);
CREATE INDEX idx_status_scheduler ON job_queue (status, scheduler_id);
CREATE INDEX idx_status_time ON job_queue (status, execute_time, date_entered);
CREATE INDEX idx_del_user ON leads (deleted, assigned_user_id);
CREATE INDEX idx_lead_acct_name_first ON leads (account_name, deleted);
CREATE INDEX idx_lead_assigned ON leads (assigned_user_id);
CREATE INDEX idx_lead_contact ON leads (contact_id);
CREATE INDEX idx_lead_del_stat ON leads (last_name, status, deleted, first_name);
CREATE INDEX idx_lead_last_first ON leads (last_name, first_name, deleted);
CREATE INDEX idx_lead_opp_del ON leads (opportunity_id, deleted);
CREATE INDEX idx_lead_phone_work ON leads (phone_work);
CREATE INDEX idx_leads_acct_del ON leads (account_id, deleted);
CREATE INDEX idx_leads_id_del ON leads (id, deleted);
CREATE INDEX idx_reports_to ON leads (reports_to_id);
CREATE INDEX idx_leads_parent_id ON leads_audit (parent_id);
CREATE INDEX idx_parent_document ON linked_documents (parent_type, parent_id, document_id);
CREATE INDEX idx_meet_date_start ON meetings (date_start);
CREATE INDEX idx_meet_par_del ON meetings (parent_id, parent_type, deleted);
CREATE INDEX idx_meet_stat_del ON meetings (assigned_user_id, status, deleted);
CREATE INDEX idx_mtg_name ON meetings (name);
CREATE INDEX idx_con_mtg_con ON meetings_contacts (contact_id);
CREATE INDEX idx_con_mtg_mtg ON meetings_contacts (meeting_id);
CREATE INDEX idx_meeting_contact ON meetings_contacts (meeting_id, contact_id);
CREATE INDEX idx_lead_meeting_lead ON meetings_leads (lead_id);
CREATE INDEX idx_lead_meeting_meeting ON meetings_leads (meeting_id);
CREATE INDEX idx_meeting_lead ON meetings_leads (meeting_id, lead_id);
CREATE INDEX idx_meeting_users ON meetings_users (meeting_id, user_id);
CREATE INDEX idx_usr_mtg_mtg ON meetings_users (meeting_id);
CREATE INDEX idx_usr_mtg_usr ON meetings_users (user_id);
CREATE INDEX idx_note_contact ON notes (contact_id);
CREATE INDEX idx_note_name ON notes (name);
CREATE INDEX idx_notes_assigned_del ON notes (deleted, assigned_user_id);
CREATE INDEX idx_notes_parent ON notes (parent_id, parent_type);
CREATE UNIQUE INDEX ckey ON oauth_consumer (c_key);
CREATE INDEX oauth_nonce_keyts ON oauth_nonce (conskey, nonce_ts);
CREATE INDEX constoken_key ON oauth_tokens (consumer);
CREATE INDEX oauth_state_ts ON oauth_tokens (tstate, token_ts);
CREATE INDEX idx_opp_assigned ON opportunities (assigned_user_id);
CREATE INDEX idx_opp_id_deleted ON opportunities (id, deleted);
CREATE INDEX idx_opp_name ON opportunities (name);
CREATE INDEX idx_opportunities_parent_id ON opportunities_audit (parent_id);
CREATE INDEX idx_con_opp_con ON opportunities_contacts (contact_id);
CREATE INDEX idx_con_opp_opp ON opportunities_contacts (opportunity_id);
CREATE INDEX idx_opportunities_contacts ON opportunities_contacts (opportunity_id, contact_id);
CREATE INDEX idx_outbound_email_parent_id ON outbound_email_audit (parent_id);
CREATE INDEX project_contacts_1_alt ON project_contacts_1_c (project_contacts_1project_ida, project_contacts_1contacts_idb);
CREATE INDEX idx_project_task_parent_id ON project_task_audit (parent_id);
CREATE INDEX project_users_1_alt ON project_users_1_c (project_users_1project_ida, project_users_1users_idb);
CREATE INDEX idx_proj_acct_acct ON projects_accounts (account_id);
CREATE INDEX idx_proj_acct_proj ON projects_accounts (project_id);
CREATE INDEX projects_accounts_alt ON projects_accounts (project_id, account_id);
CREATE INDEX idx_proj_bug_bug ON projects_bugs (bug_id);
CREATE INDEX idx_proj_bug_proj ON projects_bugs (project_id);
CREATE INDEX projects_bugs_alt ON projects_bugs (project_id, bug_id);
CREATE INDEX idx_proj_case_case ON projects_cases (case_id);
CREATE INDEX idx_proj_case_proj ON projects_cases (project_id);
CREATE INDEX projects_cases_alt ON projects_cases (project_id, case_id);
CREATE INDEX idx_proj_con_con ON projects_contacts (contact_id);
CREATE INDEX idx_proj_con_proj ON projects_contacts (project_id);
CREATE INDEX projects_contacts_alt ON projects_contacts (project_id, contact_id);
CREATE INDEX idx_proj_opp_opp ON projects_opportunities (opportunity_id);
CREATE INDEX idx_proj_opp_proj ON projects_opportunities (project_id);
CREATE INDEX projects_opportunities_alt ON projects_opportunities (project_id, opportunity_id);
CREATE INDEX idx_proj_prod_product ON projects_products (product_id);
CREATE INDEX idx_proj_prod_project ON projects_products (project_id);
CREATE INDEX projects_products_alt ON projects_products (project_id, product_id);
CREATE INDEX idx_cam_id ON prospect_list_campaigns (campaign_id);
CREATE INDEX idx_pro_id ON prospect_list_campaigns (prospect_list_id);
CREATE INDEX idx_prospect_list_campaigns ON prospect_list_campaigns (prospect_list_id, campaign_id);
CREATE INDEX idx_prospect_list_name ON prospect_lists (name);
CREATE INDEX idx_plp_pro_id ON prospect_lists_prospects (prospect_list_id);
CREATE INDEX idx_plp_rel_id ON prospect_lists_prospects (related_id, related_type, prospect_list_id);
CREATE INDEX idx_prospecs_del_last ON prospects (last_name, deleted);
CREATE INDEX idx_prospects_assigned ON prospects (assigned_user_id);
CREATE INDEX idx_prospects_id_del ON prospects (id, deleted);
CREATE INDEX idx_prospects_last_first ON prospects (last_name, first_name, deleted);
CREATE INDEX prospect_auto_tracker_key ON prospects (tracker_key);
CREATE INDEX idx_rel_name ON relationships (relationship_name);
CREATE INDEX idx_releases ON releases (name, deleted);
CREATE INDEX idx_reminder_deleted ON reminders (deleted);
CREATE INDEX idx_reminder_name ON reminders (name);
CREATE INDEX idx_reminder_related_event_module ON reminders (related_event_module);
CREATE INDEX idx_reminder_related_event_module_id ON reminders (related_event_module_id);
CREATE INDEX idx_reminder_invitee_assigned_user_id ON reminders_invitees (assigned_user_id);
CREATE INDEX idx_reminder_invitee_name ON reminders_invitees (name);
CREATE INDEX idx_reminder_invitee_related_invitee_module ON reminders_invitees (related_invitee_module);
CREATE INDEX idx_reminder_invitee_related_invitee_module_id ON reminders_invitees (related_invitee_module_id);
CREATE INDEX idx_reminder_invitee_reminder_id ON reminders_invitees (reminder_id);
CREATE INDEX idx_role_id_del ON roles (id, deleted);
CREATE INDEX idx_module_id ON roles_modules (module_id);
CREATE INDEX idx_role_id ON roles_modules (role_id);
CREATE INDEX idx_ru_role_id ON roles_users (role_id);
CREATE INDEX idx_ru_user_id ON roles_users (user_id);
CREATE INDEX idx_desc ON saved_search (name, deleted);
CREATE INDEX idx_schedule ON schedulers (date_time_start, deleted);
CREATE INDEX idx_securitygroups_parent_id ON securitygroups_audit (parent_id);
CREATE INDEX idx_securitygroups_records_del ON securitygroups_records (deleted, record_id, module, securitygroup_id);
CREATE INDEX idx_securitygroups_records_mod ON securitygroups_records (module, deleted, record_id, securitygroup_id);
CREATE INDEX securitygroups_users_idxa ON securitygroups_users (securitygroup_id);
CREATE INDEX securitygroups_users_idxb ON securitygroups_users (user_id);
CREATE INDEX securitygroups_users_idxc ON securitygroups_users (user_id, deleted, securitygroup_id, id);
CREATE INDEX securitygroups_users_idxd ON securitygroups_users (user_id, deleted, securitygroup_id);
CREATE INDEX sgrfeed_date ON sugarfeed (date_entered, deleted);
CREATE INDEX idx_task_assigned ON tasks (assigned_user_id);
CREATE INDEX idx_task_con_del ON tasks (contact_id, deleted);
CREATE INDEX idx_task_par_del ON tasks (parent_id, parent_type, deleted);
CREATE INDEX idx_task_status ON tasks (status);
CREATE INDEX idx_tsk_name ON tasks (name);
CREATE INDEX idx_terri_territoire_parent_id ON terri_territoire_audit (parent_id);
CREATE INDEX terri_territoire_thin_cycleplans_1_alt ON terri_territoire_thin_cycleplans_1_c (terri_territoire_thin_cycleplans_1thin_cycleplans_idb);
CREATE INDEX terri_territoire_thin_cycleplans_1_ida1 ON terri_territoire_thin_cycleplans_1_c (terri_territoire_thin_cycleplans_1terri_territoire_ida);
CREATE INDEX thin_cycle_plan_targets_contacts_alt ON thin_cycle_plan_targets_contacts_c (thin_cycle_plan_targets_contactsthin_cycleplantargets_ida, thin_cycle_plan_targets_contactscontacts_idb);
CREATE INDEX idx_thin_cycleplans_parent_id ON thin_cycleplans_audit (parent_id);
CREATE INDEX thin_cycleplans_terri_territoire_alt ON thin_cycleplans_terri_territoire_c (thin_cycleplans_terri_territoireterri_territoire_idb);
CREATE INDEX thin_cycleplans_terri_territoire_ida1 ON thin_cycleplans_terri_territoire_c (thin_cycleplans_terri_territoirethin_cycleplans_ida);
CREATE INDEX thin_cycleplans_thin_cycleplantargets_alt ON thin_cycleplans_thin_cycleplantargets_c (thin_cycleplans_thin_cycleplantargetsthin_cycleplantargets_idb);
CREATE INDEX thin_cycleplans_thin_cycleplantargets_ida1 ON thin_cycleplans_thin_cycleplantargets_c (thin_cycleplans_thin_cycleplantargetsthin_cycleplans_ida);
CREATE INDEX idx_thin_cycleplantargets_parent_id ON thin_cycleplantargets_audit (parent_id);
CREATE INDEX thin_cycleplantargets_contacts_alt ON thin_cycleplantargets_contacts_c (thin_cycleplantargets_contactsthin_cycleplantargets_idb);
CREATE INDEX thin_cycleplantargets_contacts_ida1 ON thin_cycleplantargets_contacts_c (thin_cycleplantargets_contactscontacts_ida);
CREATE INDEX idx_tracker_date_modified ON tracker (date_modified);
CREATE INDEX idx_tracker_iid ON tracker (item_id);
CREATE INDEX idx_tracker_monitor_id ON tracker (monitor_id);
CREATE INDEX idx_tracker_userid_itemid_vis ON tracker (user_id, item_id, visible);
CREATE INDEX idx_tracker_userid_vis_id ON tracker (user_id, visible, id);
CREATE UNIQUE INDEX upgrade_history_md5_uk ON upgrade_history (md5sum);
CREATE INDEX idx_userprefnamecat ON user_preferences (assigned_user_id, category);
CREATE INDEX idx_user_name ON users (user_name, is_group, status, last_name, first_name, id);
CREATE INDEX idx_ud_user_id ON users_feeds (user_id, feed_id);
CREATE INDEX idx_user_id ON users_last_import (assigned_user_id);
CREATE INDEX idx_username ON users_password_link (username);
CREATE INDEX idx_usersig_uid ON users_signatures (user_id);
CREATE INDEX idx_vcal ON vcals (type, user_id);
